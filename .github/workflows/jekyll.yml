name: "Build and Deploy"
on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - .gitignore
      - README.md
      - LICENSE

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Uncomment the line below if you are using the 'assets' git submodule from Chirpy Starter
          # (See: https://github.com/cotes2020/chirpy-starter/tree/main/assets)
          # submodules: true

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3 # Keep your Ruby version here (e.g., '3.1' or '3.3')
          bundler-cache: true

      # --- START OF NODE.JS BUILD STEPS (CRUCIAL FOR CHIRPY THEME) ---
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # IMPORTANT: Match this to the Node.js version in your Codespace (run 'node -v' in Codespace)
          cache: 'npm' # This caches node_modules for faster builds

      - name: Install Node.js dependencies
        run: npm install # This command reads your 'package-lock.json' to install exact package versions

      - name: Build JS and CSS assets
        run: npm run build # This executes the 'build' script from your package.json, generating minified assets
      # --- END OF NODE.JS BUILD STEPS ---

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Build site
        run: bundle exec jekyll b -d "_site${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: "production"

      - name: Test site
        run: |
          bundle exec htmlproofer _site \
            --disable-external \
            --ignore-urls "/^http:\/\/127.0.0.1/,/^http:\/\/0.0.0.0/,/^http:\/\/localhost/"

      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "_site${{ steps.pages.outputs.base_path }}"

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
